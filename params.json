{
  "name": "SimEthereal",
  "tagline": "A high performance library for real-time networked object synching.",
  "body": "![SimEthereal Logo](http://imgur.com/MV1WjxT.png)\r\n\r\nSimEthereal uses fast and small UDP messaging to share object state between clients\r\nand the server.  It operates in an \"authoritative server\" environment and only the deltas \r\nof a \"known good state\" are sent so that redundant information can be eliminated.  \r\nThe \"known good state\" is synchronized through a sort of transient reliable protocol \r\nthat uses a double-ack approach so that messages are always valid.\r\n\r\nEach message packs as much state in as possible to try to fit under standard MTU\r\nsizes to keep the UDP packets from being split.  As such, it's possible, in the worst\r\ncase, to fit more than 80 object updates in a single 1500 byte message.\r\n\r\n## Main goals:\r\n* Fast: optimize for message latency and keep overhead low\r\n* Low bandwidth: pack as much state as possible into a single message\r\n* Easy to plugin to jMonkeyEngine applications: uses the JME network service model\r\n* Flexible: provide state syncing without dictating where the state comes from or\r\nhow it will be used.\r\n\r\n\r\n## Architecture\r\n\r\n![Overview Diagram](http://imgur.com/Et9dv4q.png)\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}